name: Reviewer Added

on:
  pull_request:
    types:
      - review_requested

jobs:
  reviewer-added:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Reviewer Email
        run: |
          API_URL="https://api.github.com/users/${{ github.event.requested_reviewer.login }}"
          AUTH_HEADER="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

          REVIEWER_EMAIL=$(curl -s -H "$AUTH_HEADER" "$API_URL" | jq -r '.email')

          if [[ -n "$REVIEWER_EMAIL" ]]; then
            echo "Reviewer Email: $REVIEWER_EMAIL"
          else
            echo "Reviewer Email not found."
          fi
          echo "Reviewer_Email=$REVIEWER_EMAIL" >> "$GITHUB_ENV"
          
      - name: Retrieve Issue Key from Branch Name
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" \
            | jq -r '.head.ref')
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_ENV"
          
      - name: Check Substring
        run: |
          if echo "${{ env.branch_name }}" | grep -q "dev-branch"; then
            SECOND_PART=$(echo "${{env.branch_name}}" | cut -d'-' -f4-)
            echo "issue_key=$SECOND_PART" >> "$GITHUB_ENV"
          else
            SECOND_PART=$(echo "${{env.branch_name}}" | cut -d'-' -f2-)
            echo "issue_key=$SECOND_PART" >> "$GITHUB_ENV"
          fi
          
      - name: Get all users of the particular issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_BASIC_API_TOKEN }}
        run: |
          ISSUE_KEY="${{ env.issue_key }}"  # Replace with the Jira issue key
          API_ENDPOINT="/rest/api/2/user/assignable/search?issueKey=$ISSUE_KEY"  # Replace with the desired Jira API endpoint
          
          all_jira_users=$(curl --location --request GET $JIRA_BASE_URL$API_ENDPOINT \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $JIRA_API_TOKEN" | json_pp)
          echo "${{ github.event.requested_reviewer.login }}"
          match_found=false
          accountId=$(echo "$all_jira_users" | jq '.[1].accountId')
          if [[ $all_jira_users =~ ^\[.*\]$ ]]; then
            jiraEmails=$(echo "$all_jira_users" | jq -r '.[].emailAddress')
            echo "API response is an array."
            for email in $jiraEmails; do
              echo "Email: $email"
            done
          else
              echo "API response is not an array."
          fi  
          echo "$accountId"
          echo "AccountId=$accountId" >> "$GITHUB_ENV"
          
#       - name: Update Jira Custom Field - isPRApproved
#         env:
#           JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
#           JIRA_API_TOKEN: ${{ secrets.JIRA_BASIC_API_TOKEN }}
#         run: |
#           ISSUE_KEY="${{ env.issue_key }}"  # Replace with the Jira issue key
#           API_ENDPOINT="/rest/api/2/issue/$ISSUE_KEY"  # Replace with the desired Jira API endpoint

#           REQUEST_BODY='{
#             "fields": {
#                 "assignee": {
#                   "accountId": "712020:0f05f686-533d-49d1-928f-7a4a092c22e0"
#                 }
#             }
#           }'

#           curl --location --request PUT $JIRA_BASE_URL$API_ENDPOINT \
#             -H "Content-Type: application/json" \
#             -H "Authorization: Basic $JIRA_API_TOKEN" \
#             -d "$REQUEST_BODY"
